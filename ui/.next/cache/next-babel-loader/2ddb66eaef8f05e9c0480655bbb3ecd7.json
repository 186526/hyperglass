{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport dynamic from \"next/dynamic\";\nimport useAxios from \"axios-hooks\";\nimport { CSSReset, ThemeProvider } from \"@chakra-ui/core\";\nimport Layout from \"~/components/Layout\";\nimport PreConfig from \"~/components/PreConfig\";\nimport { makeTheme, defaultTheme } from \"~/theme\"; // Disable SSR for ColorModeProvider\n\nconst ColorModeProvider = dynamic(() => import(\"@chakra-ui/core\").then(mod => mod.ColorModeProvider), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"@chakra-ui/core\")],\n    modules: [\"@chakra-ui/core\"]\n  }\n});\n\nconst Index = () => {\n  const [{\n    data,\n    loading,\n    error\n  }, refetch] = useAxios({\n    url: \"/config\",\n    method: \"get\"\n  }); // const data = undefined;\n  // const loading = false;\n  // const error = { message: \"Shit broke\" };\n  // const refetch = () => alert(\"refetched\");\n\n  const userTheme = data && makeTheme(data.branding);\n  return __jsx(ThemeProvider, {\n    theme: data ? userTheme : defaultTheme\n  }, __jsx(ColorModeProvider, null, __jsx(CSSReset, null), !data ? __jsx(PreConfig, {\n    loading: loading,\n    error: error,\n    refresh: refetch\n  }) : __jsx(Layout, {\n    config: data\n  })));\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}