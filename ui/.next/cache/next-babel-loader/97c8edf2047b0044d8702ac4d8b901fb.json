{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { IconButton, Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalCloseButton, useDisclosure, useColorMode, useTheme } from \"@chakra-ui/core\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport MarkDown from \"~/components/MarkDown\";\nvar AnimatedIcon = motion.custom(IconButton);\nexport default (function (_ref) {\n  var _jsx;\n\n  var item = _ref.item,\n      name = _ref.name;\n\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose;\n\n  var theme = useTheme();\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var bg = {\n    light: theme.colors.white,\n    dark: theme.colors.dark\n  };\n  var color = {\n    light: theme.colors.black,\n    dark: theme.colors.white\n  };\n  var iconColor = {\n    light: theme.colors.primary[500],\n    dark: theme.colors.primary[300]\n  };\n  return __jsx(React.Fragment, null, __jsx(AnimatePresence, null, __jsx(AnimatedIcon, (_jsx = {\n    initial: {\n      opacity: 0,\n      scale: 0.3,\n      color: theme.colors.gray[500]\n    },\n    animate: {\n      opacity: 1,\n      scale: 1,\n      color: iconColor[colorMode]\n    },\n    transition: {\n      duration: 0.2\n    },\n    exit: {\n      opacity: 0,\n      scale: 0.3\n    },\n    variantColor: \"primary\",\n    \"aria-label\": \"\".concat(name, \"_help\"),\n    icon: \"info-outline\",\n    variant: \"link\",\n    size: \"sm\",\n    h: \"unset\",\n    w: 3,\n    minW: 3,\n    maxW: 3\n  }, _defineProperty(_jsx, \"h\", 3), _defineProperty(_jsx, \"minH\", 3), _defineProperty(_jsx, \"maxH\", 3), _defineProperty(_jsx, \"ml\", 1), _defineProperty(_jsx, \"mb\", 1), _defineProperty(_jsx, \"onClick\", onOpen), _jsx))), __jsx(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    size: \"xl\"\n  }, __jsx(ModalOverlay, null), __jsx(ModalContent, {\n    bg: bg[colorMode],\n    color: color[colorMode],\n    py: 4,\n    borderRadius: \"md\"\n  }, __jsx(ModalHeader, null, item.params.title), __jsx(ModalCloseButton, null), __jsx(ModalBody, null, __jsx(MarkDown, {\n    content: item.content\n  })))));\n});","map":null,"metadata":{},"sourceType":"module"}