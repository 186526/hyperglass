{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Checkbox as ChakraCheckbox, Divider, Code, Heading as ChakraHeading, Link as ChakraLink, List as ChakraList, ListItem as ChakraListItem, Text as ChakraText } from \"@chakra-ui/core\";\nimport ReactMarkdown from \"react-markdown\";\nimport CustomCodeBlock from \"~/components/CodeBlock\";\nimport { TableCell, TableHeader, Table } from \"~/components/Table\";\n\nvar Checkbox = function Checkbox(_ref) {\n  var checked = _ref.checked,\n      children = _ref.children;\n  return __jsx(ChakraCheckbox, {\n    isChecked: checked\n  }, children);\n};\n\nvar List = function List(_ref2) {\n  var ordered = _ref2.ordered,\n      children = _ref2.children;\n  return __jsx(ChakraList, {\n    as: ordered ? \"ol\" : \"ul\"\n  }, children);\n};\n\nvar ListItem = function ListItem(_ref3) {\n  var checked = _ref3.checked,\n      children = _ref3.children;\n  return checked ? __jsx(Checkbox, {\n    checked: checked\n  }, children) : __jsx(ChakraListItem, null, children);\n};\n\nvar Heading = function Heading(_ref4) {\n  var level = _ref4.level,\n      children = _ref4.children;\n  var levelMap = {\n    1: {\n      as: \"h1\",\n      size: \"lg\",\n      fontWeight: \"bold\"\n    },\n    2: {\n      as: \"h2\",\n      size: \"lg\",\n      fontWeight: \"normal\"\n    },\n    3: {\n      as: \"h3\",\n      size: \"lg\",\n      fontWeight: \"bold\"\n    },\n    4: {\n      as: \"h4\",\n      size: \"md\",\n      fontWeight: \"normal\"\n    },\n    5: {\n      as: \"h5\",\n      size: \"md\",\n      fontWeight: \"bold\"\n    },\n    6: {\n      as: \"h6\",\n      size: \"sm\",\n      fontWeight: \"bold\"\n    }\n  };\n  return __jsx(ChakraHeading, levelMap[level], children);\n};\n\nvar Link = function Link(_ref5) {\n  var children = _ref5.children,\n      props = _objectWithoutProperties(_ref5, [\"children\"]);\n\n  return __jsx(ChakraLink, _extends({\n    isExternal: true\n  }, props), children);\n};\n\nvar CodeBlock = function CodeBlock(_ref6) {\n  var value = _ref6.value;\n  return __jsx(CustomCodeBlock, null, value);\n};\n\nvar TableData = function TableData(_ref7) {\n  var isHeader = _ref7.isHeader,\n      children = _ref7.children,\n      props = _objectWithoutProperties(_ref7, [\"isHeader\", \"children\"]);\n\n  var Component = isHeader ? TableHeader : TableCell;\n  return __jsx(Component, props, children);\n};\n\nvar mdComponents = {\n  paragraph: ChakraText,\n  link: Link,\n  heading: Heading,\n  inlineCode: Code,\n  list: List,\n  listItem: ListItem,\n  thematicBreak: Divider,\n  code: CodeBlock,\n  table: Table,\n  tableCell: TableData\n};\nexport default React.forwardRef(function (_ref8, ref) {\n  var content = _ref8.content;\n  return __jsx(ReactMarkdown, {\n    ref: ref,\n    renderers: mdComponents,\n    source: content\n  });\n});","map":null,"metadata":{},"sourceType":"module"}