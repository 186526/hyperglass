{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Checkbox as ChakraCheckbox, Divider, Code, Heading as ChakraHeading, Link as ChakraLink, List as ChakraList, ListItem as ChakraListItem, Text as ChakraText } from \"@chakra-ui/core\";\nimport ReactMarkdown from \"react-markdown\";\nimport CustomCodeBlock from \"~/components/CodeBlock\";\nimport { TableCell, TableHeader, Table } from \"~/components/Table\";\n\nconst Checkbox = ({\n  checked,\n  children\n}) => __jsx(ChakraCheckbox, {\n  isChecked: checked\n}, children);\n\nconst List = ({\n  ordered,\n  children\n}) => __jsx(ChakraList, {\n  as: ordered ? \"ol\" : \"ul\"\n}, children);\n\nconst ListItem = ({\n  checked,\n  children\n}) => checked ? __jsx(Checkbox, {\n  checked: checked\n}, children) : __jsx(ChakraListItem, null, children);\n\nconst Heading = ({\n  level,\n  children\n}) => {\n  const levelMap = {\n    1: {\n      as: \"h1\",\n      size: \"lg\",\n      fontWeight: \"bold\"\n    },\n    2: {\n      as: \"h2\",\n      size: \"lg\",\n      fontWeight: \"normal\"\n    },\n    3: {\n      as: \"h3\",\n      size: \"lg\",\n      fontWeight: \"bold\"\n    },\n    4: {\n      as: \"h4\",\n      size: \"md\",\n      fontWeight: \"normal\"\n    },\n    5: {\n      as: \"h5\",\n      size: \"md\",\n      fontWeight: \"bold\"\n    },\n    6: {\n      as: \"h6\",\n      size: \"sm\",\n      fontWeight: \"bold\"\n    }\n  };\n  return __jsx(ChakraHeading, levelMap[level], children);\n};\n\nconst Link = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return __jsx(ChakraLink, _extends({\n    isExternal: true\n  }, props), children);\n};\n\nconst CodeBlock = ({\n  value\n}) => __jsx(CustomCodeBlock, null, value);\n\nconst TableData = (_ref2) => {\n  let {\n    isHeader,\n    children\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"isHeader\", \"children\"]);\n\n  const Component = isHeader ? TableHeader : TableCell;\n  return __jsx(Component, props, children);\n};\n\nconst mdComponents = {\n  paragraph: ChakraText,\n  link: Link,\n  heading: Heading,\n  inlineCode: Code,\n  list: List,\n  listItem: ListItem,\n  thematicBreak: Divider,\n  code: CodeBlock,\n  table: Table,\n  tableCell: TableData\n};\nexport default React.forwardRef(({\n  content\n}, ref) => __jsx(ReactMarkdown, {\n  ref: ref,\n  renderers: mdComponents,\n  source: content\n}));","map":null,"metadata":{},"sourceType":"module"}