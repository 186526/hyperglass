{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Button, Flex, Heading, Image, Stack, useColorMode } from \"@chakra-ui/core\";\n\nvar TitleOnly = function TitleOnly(_ref) {\n  var text = _ref.text;\n  return __jsx(Heading, {\n    as: \"h1\",\n    size: \"2xl\"\n  }, text);\n};\n\nvar SubtitleOnly = function SubtitleOnly(_ref2) {\n  var text = _ref2.text;\n  return __jsx(Heading, {\n    as: \"h3\",\n    size: \"md\"\n  }, text);\n};\n\nvar TextOnly = function TextOnly(_ref3) {\n  var text = _ref3.text;\n  return __jsx(Stack, {\n    spacing: 2\n  }, __jsx(TitleOnly, {\n    text: text.title\n  }), __jsx(SubtitleOnly, {\n    text: text.subtitle\n  }));\n};\n\nvar LogoOnly = function LogoOnly(_ref4) {\n  var text = _ref4.text,\n      logo = _ref4.logo;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var logoColor = {\n    light: logo.dark,\n    dark: logo.light\n  };\n  var logoPath = logoColor[colorMode];\n  return __jsx(Image, {\n    src: \"http://localhost:8001\".concat(logoPath),\n    alt: text.title,\n    w: logo.width,\n    h: logo.height || null\n  });\n};\n\nvar LogoTitle = function LogoTitle(_ref5) {\n  var text = _ref5.text,\n      logo = _ref5.logo;\n  return __jsx(React.Fragment, null, __jsx(LogoOnly, {\n    text: text,\n    logo: logo\n  }), __jsx(SubtitleOnly, {\n    text: text.title\n  }));\n};\n\nvar All = function All(_ref6) {\n  var text = _ref6.text,\n      logo = _ref6.logo;\n  return __jsx(React.Fragment, null, __jsx(LogoOnly, {\n    text: text,\n    logo: logo\n  }), __jsx(TextOnly, {\n    text: text\n  }));\n};\n\nvar modeMap = {\n  text_only: TextOnly,\n  logo_only: LogoOnly,\n  logo_title: LogoTitle,\n  all: All\n};\nexport default React.forwardRef(function (_ref7, ref) {\n  var text = _ref7.text,\n      logo = _ref7.logo,\n      resetForm = _ref7.resetForm;\n  var MatchedMode = modeMap[text.title_mode];\n  return __jsx(Button, {\n    variant: \"link\",\n    onClick: resetForm,\n    _focus: {\n      boxShadow: \"non\"\n    }\n  }, __jsx(Flex, {\n    ref: ref\n  }, __jsx(MatchedMode, {\n    text: text,\n    logo: logo\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}