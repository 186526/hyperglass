{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Box, PseudoBox, Spinner, useColorMode, useTheme } from \"@chakra-ui/core\";\nimport { FiSearch } from \"react-icons/fi\";\nimport { opposingColor } from \"~/util\";\nvar btnProps = {\n  display: \"inline-flex\",\n  appearance: \"none\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  transition: \"all 250ms\",\n  userSelect: \"none\",\n  position: \"relative\",\n  whiteSpace: \"nowrap\",\n  verticalAlign: \"middle\",\n  lineHeight: \"1.2\",\n  outline: \"none\",\n  as: \"button\",\n  type: \"submit\",\n  borderRadius: \"md\",\n  fontWeight: \"semibold\"\n};\nvar btnSizeMap = {\n  lg: {\n    height: 12,\n    minWidth: 12,\n    fontSize: \"lg\",\n    px: 6\n  },\n  md: {\n    height: 10,\n    minWidth: 10,\n    fontSize: \"md\",\n    px: 4\n  },\n  sm: {\n    height: 8,\n    minWidth: 8,\n    fontSize: \"sm\",\n    px: 3\n  },\n  xs: {\n    height: 6,\n    minWidth: 6,\n    fontSize: \"xs\",\n    px: 2\n  }\n};\nexport default React.forwardRef(function (_ref, ref) {\n  var _ref$isLoading = _ref.isLoading,\n      isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n      _ref$isDisabled = _ref.isDisabled,\n      isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,\n      _ref$isActive = _ref.isActive,\n      isActive = _ref$isActive === void 0 ? false : _ref$isActive,\n      _ref$isFullWidth = _ref.isFullWidth,\n      isFullWidth = _ref$isFullWidth === void 0 ? false : _ref$isFullWidth,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"lg\" : _ref$size,\n      loadingText = _ref.loadingText,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"isLoading\", \"isDisabled\", \"isActive\", \"isFullWidth\", \"size\", \"loadingText\", \"children\"]);\n\n  var _isDisabled = isDisabled || isLoading;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var theme = useTheme();\n  var btnBg = {\n    dark: theme.colors.primary[300],\n    light: theme.colors.primary[500]\n  };\n  var btnBgActive = {\n    dark: theme.colors.primary[400],\n    light: theme.colors.primary[600]\n  };\n  var btnBgHover = {\n    dark: theme.colors.primary[200],\n    light: theme.colors.primary[400]\n  };\n  var btnColor = opposingColor(theme, btnBg[colorMode]);\n  var btnColorActive = opposingColor(theme, btnBgActive[colorMode]);\n  var btnColorHover = opposingColor(theme, btnBgHover[colorMode]);\n  var btnSize = btnSizeMap[size];\n  return __jsx(PseudoBox, _extends({\n    ref: ref,\n    disabled: _isDisabled,\n    \"aria-disabled\": _isDisabled,\n    width: isFullWidth ? \"full\" : undefined,\n    \"data-active\": isActive ? \"true\" : undefined,\n    bg: btnBg[colorMode],\n    color: btnColor,\n    _active: {\n      bg: btnBgActive[colorMode],\n      color: btnColorActive\n    },\n    _hover: {\n      bg: btnBgHover[colorMode],\n      color: btnColorHover\n    },\n    _focus: {\n      boxShadow: theme.shadows.outline\n    }\n  }, btnProps, btnSize, props), isLoading ? __jsx(Spinner, {\n    position: loadingText ? \"relative\" : \"absolute\",\n    mr: loadingText ? 2 : 0,\n    color: \"currentColor\",\n    size: \"1em\"\n  }) : __jsx(FiSearch, {\n    color: btnColor\n  }), isLoading ? loadingText || __jsx(Box, {\n    as: \"span\",\n    opacity: \"0\"\n  }, children) : children);\n});","map":null,"metadata":{},"sourceType":"module"}